{
  "version": 3,
  "sources": ["../../node_modules/react-infinite-logo-slider/build/index.js"],
  "sourcesContent": ["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useState } from \"react\";\nvar Slider = function (_a) {\n    var children = _a.children, _b = _a.width, width = _b === void 0 ? \"200px\" : _b, _c = _a.duration, duration = _c === void 0 ? 40 : _c, _d = _a.toRight, toRight = _d === void 0 ? false : _d, _e = _a.pauseOnHover, pauseOnHover = _e === void 0 ? false : _e, _f = _a.blurBorders, blurBorders = _f === void 0 ? false : _f, _g = _a.blurBorderColor, blurBorderColor = _g === void 0 ? \"#fff\" : _g;\n    var _h = useState(\"\"), idNanoid = _h[0], setIdNanoid = _h[1];\n    // Generate a random string ID for keyframes\n    var generarCadenaAleatoria = function () {\n        var cadena = \"\";\n        var caracteres = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < 10; i++) {\n            cadena += caracteres.charAt(Math.floor(Math.random() * caracteres.length));\n        }\n        return cadena;\n    };\n    useEffect(function () {\n        setIdNanoid(generarCadenaAleatoria());\n    }, []);\n    useEffect(function () {\n        if (!children.length)\n            return;\n        // Calculate the total translation value based on children length and width\n        var totalTranslateX = \"calc(\".concat(toRight ? \"\" : \"-\").concat(width, \" * \").concat(children.length, \")\");\n        // Dynamically create the CSS keyframes for the animation\n        var style = document.createElement(\"style\");\n        style.type = \"text/css\";\n        var keyFrames = \"\\n      @keyframes slider_logo_slider_\".concat(idNanoid, \" {\\n        0% {\\n          transform: translateX(0);\\n        }\\n        100% {\\n          transform: translateX(\").concat(totalTranslateX, \");\\n        }\\n      }\");\n        style.innerHTML = keyFrames;\n        document.getElementsByTagName(\"head\")[0].appendChild(style);\n        // Cleanup the created styles on component unmount\n        return function () {\n            document.getElementsByTagName(\"head\")[0].removeChild(style);\n        };\n    }, [toRight, width, children, idNanoid]);\n    var handleMouseEnter = function () {\n        var sliderElement = document.getElementById(\"slider_\".concat(idNanoid));\n        if (sliderElement)\n            sliderElement.style.animationPlayState = \"paused\";\n    };\n    var handleMouseLeave = function () {\n        var sliderElement = document.getElementById(\"slider_\".concat(idNanoid));\n        if (sliderElement)\n            sliderElement.style.animationPlayState = \"running\";\n    };\n    return (React.createElement(\"div\", { style: { position: \"relative\" } },\n        React.createElement(\"div\", { style: {\n                width: \"100%\",\n                height: \"auto\",\n                margin: \"auto\",\n                overflow: \"hidden\",\n                position: \"relative\",\n            }, onMouseEnter: function () { return pauseOnHover && handleMouseEnter(); }, onMouseLeave: function () { return pauseOnHover && handleMouseLeave(); }, id: \"slider_wrapper_\".concat(idNanoid) },\n            React.createElement(\"div\", { style: {\n                    display: \"flex\",\n                    animation: \"slider_logo_slider_\".concat(idNanoid, \" \").concat(duration, \"s linear infinite\"),\n                    width: \"calc(\".concat(width, \" * \").concat(children.length * 3, \")\"),\n                }, id: \"slider_\".concat(idNanoid) },\n                children.map(function (child, i) { return (React.createElement(React.Fragment, { key: i }, React.cloneElement(child, { width: width }))); }),\n                children.map(function (child, i) { return (React.createElement(React.Fragment, { key: i }, React.cloneElement(child, { width: width }))); }),\n                children.map(function (child, i) { return (React.createElement(React.Fragment, { key: i }, React.cloneElement(child, { width: width }))); }))),\n        blurBorders && (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: {\n                    position: \"absolute\",\n                    right: 0,\n                    top: 0,\n                    width: \"180px\",\n                    transform: \"rotate(180deg)\",\n                    zIndex: 10,\n                    height: \"105%\",\n                    background: \"linear-gradient(90deg, \".concat(blurBorderColor, \" 10%, rgba(255, 255, 255, 0) 80%)\"),\n                } }),\n            React.createElement(\"div\", { style: {\n                    position: \"absolute\",\n                    left: 0,\n                    top: 0,\n                    width: \"180px\",\n                    zIndex: 10,\n                    height: \"120%\",\n                    background: \"linear-gradient(90deg, \".concat(blurBorderColor, \" 10%, rgba(255, 255, 255, 0) 80%)\"),\n                } })))));\n};\n// Slide component definition with TypeScript\nvar Slide = function (_a) {\n    var children = _a.children, _b = _a.width, width = _b === void 0 ? \"200px\" : _b, props = __rest(_a, [\"children\", \"width\"]);\n    return (React.createElement(\"div\", __assign({ style: {\n            width: width,\n            alignItems: \"center\",\n            display: \"flex\",\n        } }, props), children));\n};\n// Assign the Slide component to Slider.Slide\nSlider.Slide = Slide;\nexport default Slider;\n"],
  "mappings": "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",
  "names": ["React"]
}
